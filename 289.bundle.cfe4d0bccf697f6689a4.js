"use strict";(self.webpackChunkstatis_cost=self.webpackChunkstatis_cost||[]).push([[289],{1059:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7040);\n\nfunction useAuth() {\n  var user = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_0__/* .useAppSelector */ .C)(function (state) {\n    return state.user;\n  });\n  var isAuth = !!user.token;\n  return {\n    isAuth: isAuth,\n    email: user.email,\n    token: user.token,\n    id: user.id\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1OS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQStDO0FBRXhDLFNBQVNDLE9BQU9BLENBQUEsRUFBRztFQUN4QixJQUFNQyxJQUFJLEdBQUdGLHFFQUFjLENBQUMsVUFBQ0csS0FBSztJQUFBLE9BQUtBLEtBQUssQ0FBQ0QsSUFBSTtFQUFBLEVBQUM7RUFDbEQsSUFBTUUsTUFBTSxHQUFHLENBQUMsQ0FBQ0YsSUFBSSxDQUFDRyxLQUFLO0VBRTNCLE9BQU87SUFDTEQsTUFBTSxFQUFOQSxNQUFNO0lBQ05FLEtBQUssRUFBRUosSUFBSSxDQUFDSSxLQUFLO0lBQ2pCRCxLQUFLLEVBQUVILElBQUksQ0FBQ0csS0FBSztJQUNqQkUsRUFBRSxFQUFFTCxJQUFJLENBQUNLO0VBQ1gsQ0FBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhdGlzLWNvc3QvLi9zcmMvaG9va3MvdXNlLWF1dGgudHM/YmU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VBcHBTZWxlY3RvciB9IGZyb20gJy4vcmVkdXgtaG9va3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHtcbiAgY29uc3QgdXNlciA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudXNlcik7XG4gIGNvbnN0IGlzQXV0aCA9ICEhdXNlci50b2tlbjtcblxuICByZXR1cm4ge1xuICAgIGlzQXV0aCxcbiAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICB0b2tlbjogdXNlci50b2tlbixcbiAgICBpZDogdXNlci5pZCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VBcHBTZWxlY3RvciIsInVzZUF1dGgiLCJ1c2VyIiwic3RhdGUiLCJpc0F1dGgiLCJ0b2tlbiIsImVtYWlsIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1059\n")},779:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _use_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1059);\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7040);\n/* harmony import */ var _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5163);\n/* harmony import */ var _store_slices_categoriesSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9436);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8721);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n // Импорт вашего хука аутентификации\n // Импорт Redux хуков\n // Импорт Firebase сервисов\n\n\n\n// Определение типов\n\nvar useLoadCost = function useLoadCost() {\n  var _useAuth = (0,_use_auth__WEBPACK_IMPORTED_MODULE_3__/* .useAuth */ .a)(),\n    userId = _useAuth.id;\n  var dispatch = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_4__/* .useAppDispatch */ .T)();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoryExpenses = _useState2[0],\n    setCategoryExpenses = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    subcategoryExpenses = _useState4[0],\n    setSubcategoryExpenses = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    categoryDates = _useState6[0],\n    setCategoryDates = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expenseRecords = _useState8[0],\n    setExpenseRecords = _useState8[1];\n  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    incomeRecords = _useState10[0],\n    setIncomeRecords = _useState10[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var loadedCategories, loadedExpenses, loadedIncomes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!userId) {\n                _context.next = 22;\n                break;\n              }\n              _context.next = 3;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserCategories */ .tb)(userId);\n            case 3:\n              _context.t0 = _context.sent;\n              if (_context.t0) {\n                _context.next = 6;\n                break;\n              }\n              _context.t0 = [];\n            case 6:\n              loadedCategories = _context.t0;\n              _context.next = 9;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserExpenses */ .KR)(userId);\n            case 9:\n              _context.t1 = _context.sent;\n              if (_context.t1) {\n                _context.next = 12;\n                break;\n              }\n              _context.t1 = [];\n            case 12:\n              loadedExpenses = _context.t1;\n              _context.next = 15;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserIncomes */ .wx)(userId);\n            case 15:\n              _context.t2 = _context.sent;\n              if (_context.t2) {\n                _context.next = 18;\n                break;\n              }\n              _context.t2 = [];\n            case 18:\n              loadedIncomes = _context.t2;\n              dispatch((0,_store_slices_categoriesSlice__WEBPACK_IMPORTED_MODULE_2__/* .setCategoriesForUser */ .K_)({\n                userId: userId,\n                categories: loadedCategories\n              }));\n              setExpenseRecords(loadedExpenses.map(function (expense) {\n                return _objectSpread(_objectSpread({}, expense), {}, {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)()\n                });\n              }));\n              setIncomeRecords(loadedIncomes.map(function (income) {\n                return _objectSpread(_objectSpread({}, income), {}, {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)()\n                });\n              }));\n            case 22:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [userId, dispatch]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (userId && expenseRecords.length > 0) {\n      (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserExpenses */ .vf)(userId, expenseRecords);\n    }\n  }, [expenseRecords, userId]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (userId && incomeRecords.length > 0) {\n      (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserIncomes */ .FZ)(userId, incomeRecords);\n    }\n  }, [incomeRecords, userId]);\n  return {\n    categories: (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_4__/* .useAppSelector */ .C)(function (state) {\n      return state.categories.categoriesByUserId[userId || \'\'] || [];\n    }),\n    categoryExpenses: categoryExpenses,\n    setCategoryExpenses: setCategoryExpenses,\n    subcategoryExpenses: subcategoryExpenses,\n    setSubcategoryExpenses: setSubcategoryExpenses,\n    categoryDates: categoryDates,\n    setCategoryDates: setCategoryDates,\n    expenseRecords: expenseRecords,\n    setExpenseRecords: setExpenseRecords,\n    incomeRecords: incomeRecords,\n    setIncomeRecords: setIncomeRecords,\n    saveUserExpenses: _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserExpenses */ .vf,\n    saveUserIncomes: _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserIncomes */ .FZ,\n    userId: userId\n  };\n};\n/* harmony default export */ __webpack_exports__.Z = (useLoadCost);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///779\n')},1289:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ pages_StatsPage; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/dist/index.js\nvar dist = __webpack_require__(9655);\n// EXTERNAL MODULE: ./src/hooks/useLoadCost.ts\nvar useLoadCost = __webpack_require__(779);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar react_router_dist = __webpack_require__(9250);\n// EXTERNAL MODULE: ./node_modules/chart.js/dist/chart.js + 2 modules\nvar chart = __webpack_require__(9449);\n// EXTERNAL MODULE: ./node_modules/react-chartjs-2/dist/index.js\nvar react_chartjs_2_dist = __webpack_require__(6495);\n// EXTERNAL MODULE: ./node_modules/react-datepicker/dist/react-datepicker.min.js\nvar react_datepicker_min = __webpack_require__(9198);\nvar react_datepicker_min_default = /*#__PURE__*/__webpack_require__.n(react_datepicker_min);\n// EXTERNAL MODULE: ./node_modules/react-datepicker/dist/react-datepicker.css\nvar react_datepicker = __webpack_require__(4308);\n;// CONCATENATED MODULE: ./src/components/statis/statCss.ts\nvar containerStyles = {\n  height: '600px',\n  width: '1800px',\n  marginTop: '80px',\n  marginLeft: '40px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  background: 'linear-gradient(180deg, rgba(255, 165, 0, 0.8), rgba(128, 0, 128, 0.8))',\n  borderRadius: '15px',\n  boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.25)',\n  padding: '20px'\n};\nvar options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    y: {\n      beginAtZero: true,\n      ticks: {\n        color: '#fff'\n      },\n      grid: {\n        color: 'rgba(255, 255, 255, 0.1)'\n      }\n    },\n    x: {\n      offset: true,\n      ticks: {\n        color: 'gold',\n        font: {\n          size: 14,\n          weight: 'bold'\n        },\n        textStrokeColor: 'black',\n        textStrokeWidth: 3\n      },\n      afterFit: function afterFit(scaleInstance) {\n        scaleInstance.height = scaleInstance.height * 2.2;\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      position: 'top',\n      labels: {\n        color: '#fff'\n      }\n    }\n  },\n  elements: {\n    point: {\n      radius: 5\n    },\n    line: {\n      tension: 0.4\n    }\n  }\n};\n;// CONCATENATED MODULE: ./src/components/statis/processChartData.ts\nvar processChartData = function processChartData(records, type, categoryId, period) {\n  var startDate = new Date();\n  startDate.setHours(0, 0, 0, 0);\n  var endDate = new Date();\n  if (period === 'month') {\n    endDate.setMonth(startDate.getMonth() + 1);\n  } else {\n    endDate.setDate(startDate.getDate() + 6);\n  }\n  endDate.setHours(0, 0, 0, 0);\n  var aggregatedData = {};\n  for (var d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n    var dateKey = d.toLocaleDateString('ru-RU');\n    aggregatedData[dateKey] = 0;\n  }\n  records.forEach(function (record) {\n    var recordDate = new Date(record.date);\n    recordDate.setHours(0, 0, 0, 0);\n    if (record.categoryId === categoryId && recordDate >= startDate && recordDate <= endDate) {\n      var _dateKey = recordDate.toLocaleDateString('ru-RU');\n      var value = type === 'expenses' ? record.totalExpense : record.totalIncome;\n      aggregatedData[_dateKey] += value;\n    }\n  });\n  return {\n    labels: Object.keys(aggregatedData),\n    datasets: [{\n      label: type === 'expenses' ? 'Расходы' : 'Доходы',\n      data: Object.values(aggregatedData),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n};\n;// CONCATENATED MODULE: ./src/components/statis/DateRange.ts\nvar DateRange = function DateRange(records, type, categoryId, startDate, endDate) {\n  startDate.setHours(0, 0, 0, 0);\n  endDate.setHours(23, 59, 59, 999);\n  var aggregatedData = {};\n  for (var d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n    var dateKey = d.toLocaleDateString('ru-RU');\n    aggregatedData[dateKey] = 0;\n  }\n  records.forEach(function (record) {\n    var recordDate = new Date(record.date);\n    recordDate.setHours(0, 0, 0, 0);\n    if (record.categoryId === categoryId && recordDate >= startDate && recordDate <= endDate) {\n      var _dateKey = recordDate.toLocaleDateString('ru-RU');\n      var value = type === 'expenses' ? record.totalExpense : record.totalIncome;\n      aggregatedData[_dateKey] += value;\n    }\n  });\n  return {\n    labels: Object.keys(aggregatedData),\n    datasets: [{\n      label: type === 'expenses' ? 'Расходы' : 'Доходы',\n      data: Object.values(aggregatedData),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n};\n;// CONCATENATED MODULE: ./src/pages/StatsPage.tsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\nchart/* Chart */.kL.register.apply(chart/* Chart */.kL, _toConsumableArray(chart/* registerables */.zX));\nvar StatsPage = function StatsPage() {\n  var navigate = (0,react_router_dist/* useNavigate */.s0)();\n  var BackButton = function BackButton() {\n    navigate('/main');\n  };\n  var _useSearchParams = (0,dist/* useSearchParams */.lr)(),\n    _useSearchParams2 = _slicedToArray(_useSearchParams, 1),\n    searchParams = _useSearchParams2[0];\n  var _useLoadCost = (0,useLoadCost/* default */.Z)(),\n    expenseRecords = _useLoadCost.expenseRecords,\n    incomeRecords = _useLoadCost.incomeRecords;\n  var _useState = (0,react.useState)({\n      labels: [],\n      datasets: [{\n        label: '',\n        data: [],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    chartData = _useState2[0],\n    setChartData = _useState2[1];\n  var _useState3 = (0,react.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCustomDateRange = _useState4[0],\n    setIsCustomDateRange = _useState4[1];\n  var _useState5 = (0,react.useState)('week'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    period = _useState6[0],\n    setPeriod = _useState6[1];\n  var _useState7 = (0,react.useState)([null, null]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dateRange = _useState8[0],\n    setDateRange = _useState8[1];\n  var _dateRange = _slicedToArray(dateRange, 2),\n    startDate = _dateRange[0],\n    endDate = _dateRange[1];\n  (0,react.useEffect)(function () {\n    var type = searchParams.get('type') || 'expenses';\n    var categoryId = searchParams.get('categoryId') || '';\n    if (!categoryId) {\n      setChartData({\n        labels: [],\n        datasets: [{\n          label: type === 'expenses' ? 'Расходы' : 'Доходы',\n          data: [],\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      });\n      setIsCustomDateRange(false);\n      return;\n    }\n    var recordsToProcess = type === 'expenses' ? expenseRecords : incomeRecords;\n    if (startDate && endDate) {\n      var newChartData = DateRange(recordsToProcess, type, categoryId, startDate, endDate);\n      setChartData(newChartData);\n      setIsCustomDateRange(true);\n    } else {\n      var _newChartData = processChartData(recordsToProcess, type, categoryId, period);\n      setChartData(_newChartData);\n      setIsCustomDateRange(false);\n    }\n  }, [searchParams, expenseRecords, incomeRecords, startDate, endDate, period]);\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: containerStyles\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginRight: '1400px'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"backButton\",\n    onClick: BackButton\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"), /*#__PURE__*/react.createElement((react_datepicker_min_default()), {\n    placeholderText: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\",\n    selectsRange: true,\n    startDate: startDate,\n    endDate: endDate,\n    onChange: function onChange(update) {\n      setDateRange(update);\n    }\n  }), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: function onClick() {\n      setDateRange([null, null]);\n      setIsCustomDateRange(false);\n    },\n    style: {\n      marginLeft: '10px'\n    }\n  }, \"\\u0421\\u0431\\u0440\\u043E\\u0441\")), /*#__PURE__*/react.createElement(\"h1\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, isCustomDateRange ? 'Статистика за выбранный период' : 'Статистика за ' + (period === 'week' ? 'последнюю неделю' : 'последний месяц')), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: function onClick() {\n      setPeriod('week');\n      setIsCustomDateRange(false);\n    }\n  }, \"\\u041D\\u0435\\u0434\\u0435\\u043B\\u044F\"), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: function onClick() {\n      setPeriod('month');\n      setIsCustomDateRange(false);\n    }\n  }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\")), /*#__PURE__*/react.createElement(react_chartjs_2_dist/* Line */.x1, {\n    data: chartData,\n    options: options\n  }));\n};\n/* harmony default export */ var pages_StatsPage = (StatsPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1289\n")}}]);