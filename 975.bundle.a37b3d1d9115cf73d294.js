"use strict";(self.webpackChunkstatis_cost=self.webpackChunkstatis_cost||[]).push([[975],{1059:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7040);\n\nfunction useAuth() {\n  var user = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_0__/* .useAppSelector */ .C)(function (state) {\n    return state.user;\n  });\n  var isAuth = !!user.token;\n  return {\n    isAuth: isAuth,\n    email: user.email,\n    token: user.token,\n    id: user.id\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1OS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQStDO0FBRXhDLFNBQVNDLE9BQU9BLENBQUEsRUFBRztFQUN4QixJQUFNQyxJQUFJLEdBQUdGLHFFQUFjLENBQUMsVUFBQ0csS0FBSztJQUFBLE9BQUtBLEtBQUssQ0FBQ0QsSUFBSTtFQUFBLEVBQUM7RUFDbEQsSUFBTUUsTUFBTSxHQUFHLENBQUMsQ0FBQ0YsSUFBSSxDQUFDRyxLQUFLO0VBRTNCLE9BQU87SUFDTEQsTUFBTSxFQUFOQSxNQUFNO0lBQ05FLEtBQUssRUFBRUosSUFBSSxDQUFDSSxLQUFLO0lBQ2pCRCxLQUFLLEVBQUVILElBQUksQ0FBQ0csS0FBSztJQUNqQkUsRUFBRSxFQUFFTCxJQUFJLENBQUNLO0VBQ1gsQ0FBQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhdGlzLWNvc3QvLi9zcmMvaG9va3MvdXNlLWF1dGgudHM/YmU0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VBcHBTZWxlY3RvciB9IGZyb20gJy4vcmVkdXgtaG9va3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHtcbiAgY29uc3QgdXNlciA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudXNlcik7XG4gIGNvbnN0IGlzQXV0aCA9ICEhdXNlci50b2tlbjtcblxuICByZXR1cm4ge1xuICAgIGlzQXV0aCxcbiAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICB0b2tlbjogdXNlci50b2tlbixcbiAgICBpZDogdXNlci5pZCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VBcHBTZWxlY3RvciIsInVzZUF1dGgiLCJ1c2VyIiwic3RhdGUiLCJpc0F1dGgiLCJ0b2tlbiIsImVtYWlsIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1059\n")},779:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _use_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1059);\n/* harmony import */ var _redux_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7040);\n/* harmony import */ var _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5163);\n/* harmony import */ var _store_slices_categoriesSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9436);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8721);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n // Импорт вашего хука аутентификации\n // Импорт Redux хуков\n // Импорт Firebase сервисов\n\n\n\n// Определение типов\n\nvar useLoadCost = function useLoadCost() {\n  var _useAuth = (0,_use_auth__WEBPACK_IMPORTED_MODULE_3__/* .useAuth */ .a)(),\n    userId = _useAuth.id;\n  var dispatch = (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_4__/* .useAppDispatch */ .T)();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoryExpenses = _useState2[0],\n    setCategoryExpenses = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    subcategoryExpenses = _useState4[0],\n    setSubcategoryExpenses = _useState4[1];\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    categoryDates = _useState6[0],\n    setCategoryDates = _useState6[1];\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expenseRecords = _useState8[0],\n    setExpenseRecords = _useState8[1];\n  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    incomeRecords = _useState10[0],\n    setIncomeRecords = _useState10[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var loadedCategories, loadedExpenses, loadedIncomes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!userId) {\n                _context.next = 22;\n                break;\n              }\n              _context.next = 3;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserCategories */ .tb)(userId);\n            case 3:\n              _context.t0 = _context.sent;\n              if (_context.t0) {\n                _context.next = 6;\n                break;\n              }\n              _context.t0 = [];\n            case 6:\n              loadedCategories = _context.t0;\n              _context.next = 9;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserExpenses */ .KR)(userId);\n            case 9:\n              _context.t1 = _context.sent;\n              if (_context.t1) {\n                _context.next = 12;\n                break;\n              }\n              _context.t1 = [];\n            case 12:\n              loadedExpenses = _context.t1;\n              _context.next = 15;\n              return (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .loadUserIncomes */ .wx)(userId);\n            case 15:\n              _context.t2 = _context.sent;\n              if (_context.t2) {\n                _context.next = 18;\n                break;\n              }\n              _context.t2 = [];\n            case 18:\n              loadedIncomes = _context.t2;\n              dispatch((0,_store_slices_categoriesSlice__WEBPACK_IMPORTED_MODULE_2__/* .setCategoriesForUser */ .K_)({\n                userId: userId,\n                categories: loadedCategories\n              }));\n              setExpenseRecords(loadedExpenses.map(function (expense) {\n                return _objectSpread(_objectSpread({}, expense), {}, {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)()\n                });\n              }));\n              setIncomeRecords(loadedIncomes.map(function (income) {\n                return _objectSpread(_objectSpread({}, income), {}, {\n                  id: (0,uuid__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)()\n                });\n              }));\n            case 22:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [userId, dispatch]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (userId && expenseRecords.length > 0) {\n      (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserExpenses */ .vf)(userId, expenseRecords);\n    }\n  }, [expenseRecords, userId]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (userId && incomeRecords.length > 0) {\n      (0,_firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserIncomes */ .FZ)(userId, incomeRecords);\n    }\n  }, [incomeRecords, userId]);\n  return {\n    categories: (0,_redux_hooks__WEBPACK_IMPORTED_MODULE_4__/* .useAppSelector */ .C)(function (state) {\n      return state.categories.categoriesByUserId[userId || \'\'] || [];\n    }),\n    categoryExpenses: categoryExpenses,\n    setCategoryExpenses: setCategoryExpenses,\n    subcategoryExpenses: subcategoryExpenses,\n    setSubcategoryExpenses: setSubcategoryExpenses,\n    categoryDates: categoryDates,\n    setCategoryDates: setCategoryDates,\n    expenseRecords: expenseRecords,\n    setExpenseRecords: setExpenseRecords,\n    incomeRecords: incomeRecords,\n    setIncomeRecords: setIncomeRecords,\n    saveUserExpenses: _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserExpenses */ .vf,\n    saveUserIncomes: _firebase_firebaseService__WEBPACK_IMPORTED_MODULE_1__/* .saveUserIncomes */ .FZ,\n    userId: userId\n  };\n};\n/* harmony default export */ __webpack_exports__.Z = (useLoadCost);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///779\n')},2975:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ pages_MainPage; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar dist = __webpack_require__(9250);\n// EXTERNAL MODULE: ./node_modules/react-datepicker/dist/react-datepicker.min.js\nvar react_datepicker_min = __webpack_require__(9198);\nvar react_datepicker_min_default = /*#__PURE__*/__webpack_require__.n(react_datepicker_min);\n// EXTERNAL MODULE: ./node_modules/react-datepicker/dist/react-datepicker.css\nvar react_datepicker = __webpack_require__(4308);\n;// CONCATENATED MODULE: ./src/components/cost/ExpenseItem.tsx\n\nvar ExpenseItem = function ExpenseItem(_ref) {\n  var record = _ref.record,\n    onRemove = _ref.onRemove;\n  var formattedDate = new Date(record.date).toLocaleDateString(\'ru-RU\', {\n    day: \'numeric\',\n    month: \'long\',\n    year: \'numeric\'\n  });\n  return /*#__PURE__*/react.createElement("div", {\n    className: "total-expense"\n  }, formattedDate, " ", record.totalExpense, " \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439.", /*#__PURE__*/react.createElement("button", {\n    onClick: function onClick() {\n      return onRemove(record.id);\n    },\n    className: "remove-button"\n  }, "x"));\n};\n/* harmony default export */ var cost_ExpenseItem = (ExpenseItem);\n;// CONCATENATED MODULE: ./src/components/cost/IncomeItem.tsx\n\nvar IncomeItem = function IncomeItem(_ref) {\n  var record = _ref.record,\n    onRemove = _ref.onRemove;\n  var formattedDate = new Date(record.date).toLocaleDateString(\'ru-RU\', {\n    day: \'numeric\',\n    month: \'long\',\n    year: \'numeric\'\n  });\n  return /*#__PURE__*/react.createElement("div", {\n    className: "total-income"\n  }, formattedDate, " ", record.totalIncome, " \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439.", /*#__PURE__*/react.createElement("button", {\n    onClick: function onClick() {\n      return onRemove(record.id);\n    },\n    className: "remove-button"\n  }, "x"));\n};\n/* harmony default export */ var cost_IncomeItem = (IncomeItem);\n// EXTERNAL MODULE: ./node_modules/uuid/dist/esm-browser/v4.js + 3 modules\nvar v4 = __webpack_require__(8721);\n;// CONCATENATED MODULE: ./src/components/cost/CalcCost.ts\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\nvar handleExpenseChange = function handleExpenseChange(setCategoryExpenses, categoryId, value) {\n  setCategoryExpenses(function (prevExpenses) {\n    return _objectSpread(_objectSpread({}, prevExpenses), {}, _defineProperty({}, categoryId, Number(value)));\n  });\n};\nvar handleSubcategoryExpenseChange = function handleSubcategoryExpenseChange(setSubcategoryExpenses, key, value) {\n  setSubcategoryExpenses(function (prevExpenses) {\n    return _objectSpread(_objectSpread({}, prevExpenses), {}, _defineProperty({}, key, Number(value)));\n  });\n};\nvar handleDateChange = function handleDateChange(setCategoryDates, categoryId, date) {\n  setCategoryDates(function (prevDates) {\n    return _objectSpread(_objectSpread({}, prevDates), {}, _defineProperty({}, categoryId, date || new Date()));\n  });\n};\nvar calculateTotalExpense = function calculateTotalExpense(categoryExpenses, subcategoryExpenses, categoryId) {\n  var categoryExpense = categoryExpenses[categoryId] || 0;\n  var subcategoryExpense = Object.keys(subcategoryExpenses).filter(function (key) {\n    return key.startsWith("".concat(categoryId, "-"));\n  }).reduce(function (sum, key) {\n    return sum + subcategoryExpenses[key];\n  }, 0);\n  return categoryExpense + subcategoryExpense;\n};\nvar calculateTotalIncome = function calculateTotalIncome(categoryExpenses, subcategoryExpenses, categoryId) {\n  var categoryIncome = categoryExpenses[categoryId] || 0;\n  var subcategoryIncome = Object.keys(subcategoryExpenses).filter(function (key) {\n    return key.startsWith("".concat(categoryId, "-"));\n  }).reduce(function (sum, key) {\n    return sum + (subcategoryExpenses[key] || 0);\n  }, 0);\n  return categoryIncome + subcategoryIncome;\n};\nvar handleSaveExpense = function handleSaveExpense(setExpenseRecords, expenseRecords, categoryId, categoryDates, calculateTotalExpense, categoryExpenses, subcategoryExpenses) {\n  var date = categoryDates[categoryId];\n  if (date) {\n    var totalExpense = calculateTotalExpense(categoryExpenses, subcategoryExpenses, categoryId);\n    setExpenseRecords([].concat(_toConsumableArray(expenseRecords), [{\n      id: (0,v4/* default */.Z)(),\n      categoryId: categoryId,\n      date: date,\n      totalExpense: totalExpense\n    }]));\n  }\n};\nvar handleSaveIncome = function handleSaveIncome(setIncomeRecords, incomeRecords, categoryId, categoryDates, calculateTotalIncome, categoryExpenses, subcategoryExpenses) {\n  var date = categoryDates[categoryId];\n  if (date) {\n    var totalIncome = calculateTotalIncome(categoryExpenses, subcategoryExpenses, categoryId);\n    setIncomeRecords([].concat(_toConsumableArray(incomeRecords), [{\n      id: (0,v4/* default */.Z)(),\n      categoryId: categoryId,\n      date: date,\n      totalIncome: totalIncome\n    }]));\n  }\n};\nvar handleRemoveIncome = function handleRemoveIncome(setIncomeRecords, incomeRecords, recordId, userId, saveUserIncomes) {\n  var updatedIncomes = incomeRecords.filter(function (record) {\n    return record.id !== recordId;\n  });\n  setIncomeRecords(updatedIncomes);\n  saveUserIncomes(userId, updatedIncomes);\n};\nvar handleRemoveExpense = function handleRemoveExpense(setExpenseRecords, expenseRecords, recordId, userId, saveExpenses) {\n  var updatedExpenses = expenseRecords.filter(function (record) {\n    return record.id !== recordId;\n  });\n  setExpenseRecords(updatedExpenses);\n  saveExpenses(userId, updatedExpenses);\n};\n;// CONCATENATED MODULE: ./src/components/cost/CostItems.tsx\n\n\n\n\n\n\n\nvar CostItems = function CostItems(_ref) {\n  var categories = _ref.categories,\n    categoryExpenses = _ref.categoryExpenses,\n    subcategoryExpenses = _ref.subcategoryExpenses,\n    categoryDates = _ref.categoryDates,\n    expenseRecords = _ref.expenseRecords,\n    incomeRecords = _ref.incomeRecords,\n    setCategoryExpenses = _ref.setCategoryExpenses,\n    setSubcategoryExpenses = _ref.setSubcategoryExpenses,\n    setCategoryDates = _ref.setCategoryDates,\n    setExpenseRecords = _ref.setExpenseRecords,\n    setIncomeRecords = _ref.setIncomeRecords,\n    userId = _ref.userId,\n    saveUserExpenses = _ref.saveUserExpenses,\n    saveUserIncomes = _ref.saveUserIncomes;\n  var navigate = (0,dist/* useNavigate */.s0)();\n  var resetInputs = function resetInputs() {\n    setCategoryExpenses({});\n    setSubcategoryExpenses({});\n  };\n  var handleViewWeeklyExpenses = function handleViewWeeklyExpenses(categoryId) {\n    navigate("/stats?type=expenses&period=week&categoryId=".concat(categoryId));\n  };\n  var handleViewWeeklyIncome = function handleViewWeeklyIncome(categoryId) {\n    navigate("/stats?type=income&period=week&categoryId=".concat(categoryId));\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, categories.map(function (category) {\n    return /*#__PURE__*/react.createElement("div", {\n      key: category.id,\n      className: "category-container"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "category-header"\n    }, /*#__PURE__*/react.createElement("span", {\n      className: "category-name"\n    }, category.name), categoryDates[category.id] && /*#__PURE__*/react.createElement("input", {\n      type: "number",\n      className: "category-input",\n      placeholder: "\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443",\n      value: categoryExpenses[category.id] || \'\',\n      onChange: function onChange(e) {\n        return handleExpenseChange(setCategoryExpenses, String(category.id), e.target.value);\n      }\n    }), /*#__PURE__*/react.createElement("div", {\n      className: "date-picker-container"\n    }, /*#__PURE__*/react.createElement((react_datepicker_min_default()), {\n      selected: categoryDates[category.id],\n      onChange: function onChange(date) {\n        return handleDateChange(setCategoryDates, String(category.id), date);\n      },\n      className: "date-picker",\n      placeholderText: "\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443"\n    }), /*#__PURE__*/react.createElement("button", {\n      onClick: function onClick() {\n        handleSaveExpense(setExpenseRecords, expenseRecords, String(category.id), categoryDates, calculateTotalExpense, categoryExpenses, subcategoryExpenses);\n        resetInputs();\n      }\n    }, "\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434"), /*#__PURE__*/react.createElement("button", {\n      onClick: function onClick() {\n        handleSaveIncome(setIncomeRecords, incomeRecords, String(category.id), categoryDates, calculateTotalIncome, categoryExpenses, subcategoryExpenses);\n        resetInputs();\n      }\n    }, "\\u0414\\u043E\\u0445\\u043E\\u0434"))), category.subcategories.map(function (subcategory) {\n      return /*#__PURE__*/react.createElement("div", {\n        key: subcategory.id,\n        className: "subcategory-container"\n      }, /*#__PURE__*/react.createElement("span", {\n        className: "subcategory-name"\n      }, subcategory.name), categoryDates[category.id] && /*#__PURE__*/react.createElement("input", {\n        type: "number",\n        className: "subcategory-input",\n        placeholder: "\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443",\n        value: subcategoryExpenses["".concat(category.id, "-").concat(subcategory.id)] || \'\',\n        onChange: function onChange(e) {\n          return handleSubcategoryExpenseChange(setSubcategoryExpenses, "".concat(category.id, "-").concat(subcategory.id), e.target.value);\n        }\n      }));\n    }), /*#__PURE__*/react.createElement("div", {\n      className: "expenses-incomes-container"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "expenses-container"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "expenses-header"\n    }, "\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B", /*#__PURE__*/react.createElement("button", {\n      onClick: function onClick() {\n        return handleViewWeeklyExpenses(String(category.id));\n      }\n    }, "\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0437\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E")), expenseRecords.filter(function (record) {\n      return record.categoryId === String(category.id);\n    }).map(function (record) {\n      return /*#__PURE__*/react.createElement(cost_ExpenseItem, {\n        key: record.id,\n        record: record,\n        onRemove: function onRemove() {\n          return handleRemoveExpense(setExpenseRecords, expenseRecords, record.id, userId, saveUserExpenses);\n        }\n      });\n    })), /*#__PURE__*/react.createElement("div", {\n      className: "incomes-container"\n    }, /*#__PURE__*/react.createElement("div", {\n      className: "incomes-header"\n    }, "\\u0414\\u043E\\u0445\\u043E\\u0434\\u044B", /*#__PURE__*/react.createElement("button", {\n      onClick: function onClick() {\n        return handleViewWeeklyIncome(String(category.id));\n      }\n    }, "\\u0414\\u043E\\u0445\\u043E\\u0434\\u044B \\u0437\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E")), incomeRecords.filter(function (record) {\n      return record.categoryId === String(category.id);\n    }).map(function (record) {\n      return /*#__PURE__*/react.createElement(cost_IncomeItem, {\n        key: record.id,\n        record: record,\n        onRemove: function onRemove() {\n          return handleRemoveIncome(setIncomeRecords, incomeRecords, record.id, userId, saveUserIncomes);\n        }\n      });\n    }))));\n  }));\n};\n/* harmony default export */ var cost_CostItems = (CostItems);\n// EXTERNAL MODULE: ./src/hooks/useLoadCost.ts\nvar useLoadCost = __webpack_require__(779);\n;// CONCATENATED MODULE: ./src/pages/MainPage.tsx\n\n\n\n\n\nvar MainPage = function MainPage() {\n  var navigate = (0,dist/* useNavigate */.s0)();\n  var handleBackClick = function handleBackClick() {\n    navigate(\'/settings\');\n  };\n  var _useLoadCost = (0,useLoadCost/* default */.Z)(),\n    categories = _useLoadCost.categories,\n    categoryExpenses = _useLoadCost.categoryExpenses,\n    setCategoryExpenses = _useLoadCost.setCategoryExpenses,\n    subcategoryExpenses = _useLoadCost.subcategoryExpenses,\n    setSubcategoryExpenses = _useLoadCost.setSubcategoryExpenses,\n    categoryDates = _useLoadCost.categoryDates,\n    setCategoryDates = _useLoadCost.setCategoryDates,\n    expenseRecords = _useLoadCost.expenseRecords,\n    setExpenseRecords = _useLoadCost.setExpenseRecords,\n    incomeRecords = _useLoadCost.incomeRecords,\n    setIncomeRecords = _useLoadCost.setIncomeRecords,\n    saveUserExpenses = _useLoadCost.saveUserExpenses,\n    saveUserIncomes = _useLoadCost.saveUserIncomes,\n    userId = _useLoadCost.userId;\n  if (!userId) {\n    return /*#__PURE__*/react.createElement("div", null, "\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0430\\u0443\\u0442\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u0446\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D");\n  }\n  return /*#__PURE__*/react.createElement("div", {\n    className: "main-container"\n  }, /*#__PURE__*/react.createElement("button", {\n    className: "backButton",\n    onClick: handleBackClick\n  }, "\\u041D\\u0430\\u0437\\u0430\\u0434"), /*#__PURE__*/react.createElement(cost_CostItems, {\n    categories: categories,\n    categoryExpenses: categoryExpenses,\n    subcategoryExpenses: subcategoryExpenses,\n    categoryDates: categoryDates,\n    expenseRecords: expenseRecords,\n    incomeRecords: incomeRecords,\n    setCategoryExpenses: setCategoryExpenses,\n    setSubcategoryExpenses: setSubcategoryExpenses,\n    setCategoryDates: setCategoryDates,\n    setExpenseRecords: setExpenseRecords,\n    setIncomeRecords: setIncomeRecords,\n    saveUserExpenses: saveUserExpenses,\n    saveUserIncomes: saveUserIncomes,\n    userId: userId\n  }));\n};\n/* harmony default export */ var pages_MainPage = (MainPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2975\n')}}]);